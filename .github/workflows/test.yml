name: Test

# This is derived from the standard CMake template for github actions.
# For more details on the settings used, have a look at the template in the marketplace

# Only pushes and PRs against the master branch are built
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    # Strategy: builds on oldest and newest Ubuntu and on Windows
    # Oldest -> because that's what is used to build backwards compatible packages (see release.yaml)
    # Newest -> so that we can test with latest tools (clang-tidy) and use recent drivers/packages
    strategy:
      matrix:
        target-platform: [host-os]
        os: [ubuntu-20.04, ubuntu-22.04, windows-2022, macos-12]
        type: [Debug, Release]
        include:
          - target-platform: iphoneos
            os: macos-12
            type: Debug
          - target-platform: iphoneos
            os: macos-12
            type: Debug
        # on Windows we skip Debug because otherwise the hosted runner runs out of space
        exclude:
          - os: windows-2022
            type: Debug
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Install GL/X11 packages for rendering (Linux only)
      run: |
        sudo apt-get update && sudo apt-get -y --no-install-recommends install \
          libgles2-mesa-dev \
          libx11-dev
      if: ${{ contains(matrix.os, 'ubuntu') }}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake (Windows)
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        # This is needed because on the Windows Server 2019 build nodes of Github, the Perl installation
        # exposes its libraries on the path and messes up CMake builds
        restore_path=$PATH
        echo "Path before: $PATH"
        export PATH=$(echo "$PATH" | sed -e 's/:\/c\/Strawberry\/c\/bin//')
        export PATH=$(echo "$PATH" | sed -e 's/:\/c\/Strawberry\/perl\/site\/bin//')
        export PATH=$(echo "$PATH" | sed -e 's/:\/c\/Strawberry\/perl\/bin//')
        echo "Path after: $PATH"

        # Limiting CMAKE_CONFIGURATION_TYPES for MSVC improves build time and reduces diskspace usage
        cmake $GITHUB_WORKSPACE \
            -DCMAKE_BUILD_TYPE=${{ matrix.type }} \
            -DCMAKE_CONFIGURATION_TYPES=${{ matrix.type }}
      if: ${{ contains(matrix.os, 'windows') }}

    - name: Configure CMake (Ubuntu 22.04 + Clang)
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        CC=clang CXX=clang++ cmake $GITHUB_WORKSPACE \
            -DCMAKE_BUILD_TYPE=${{ matrix.type }}
      if: ${{ matrix.os == 'ubuntu-22.04' }}

    - name: Configure CMake (Oldest Ubuntu + GCC)
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.type }}
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      
    - name: Configure CMake (macOS)
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.type }}
      if: ${{ matrix.os == 'macos-12' && matrix.target-platform != 'iphoneos' && matrix.target-platform != 'iphonesimulator' }}

    - name: Configure CMake (iOS)
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_SYSTEM_NAME=iOS -GXcode -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO -DCMAKE_OSX_SYSROOT=${{ matrix.target-platform }}
      if: ${{ matrix.os == 'macos-12' && (matrix.target-platform == 'iphoneos' || matrix.target-platform == 'iphonesimulator') }}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{ matrix.type }}

    - name: Run unit tests (exclude rendering tests)
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C ${{ matrix.type }} --exclude-regex '.*RNDSANDWICHTEST'
      if: ${{ matrix.os != 'macos-12' && matrix.target-platform != 'iphoneos' }}
