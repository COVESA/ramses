#  -------------------------------------------------------------------------
#  Copyright (C) 2021 BMW AG
#  -------------------------------------------------------------------------
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at https://mozilla.org/MPL/2.0/.
#  -------------------------------------------------------------------------

---

- name: install python 3.8 apt packages
  apt:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - python3.8
    - python3.8-venv


# Install in own virtualenv to protect system
- name: Create venv with requirements (Linux)
  pip:
    requirements: "{{ git_root }}/ci/oss/requirements.txt"
    virtualenv: "{{ ansible_user_dir }}/oss-create-release"
    virtualenv_command: "/usr/bin/python3.8 -m venv"


# Don't invoke this job without a tag - otherwise it will fail
- name: Publish OSS release
  shell: |
    set -o pipefail
    set -e
    oss_repo="ramses/ramses-logic-oss"
    remote_url="git@cc-github.bmwgroup.net:$oss_repo.git"
    githash=$(git rev-parse --short HEAD)
    tagname={{ zuul.tag }}

    {{ git_root }}/ci/scripts/check_versions.sh -t $tagname

    echo "Creating release from tag '$tagname' (githash $githash)"

    {{ ansible_user_dir }}/oss-create-release/bin/python ci/oss/oss-release.py \
        --oss-mirror "{{ git_root_oss }}" \
        --release-name $tagname \
        --no-submodule-init

    branch_name="$tagname-$githash"
    echo "Pushing release branch $branch_name to $remote_url"
    cd {{ git_root_oss }}
    git remote add cc $remote_url
    git checkout -b $branch_name
    git push cc $branch_name

    pr_title="OSS release $tagname"
    echo "Creating release PR $pr_title in repo $oss_repo"
    github_token=`cat {{ ansible_user_dir }}/.github-token`
    pr_nr=$(curl -f -X POST \
        -H "Authorization: token $github_token" \
        -H "Accept: application/vnd.github+json" \
        https://cc-github.bmwgroup.net/api/v3/repos/$oss_repo/pulls \
        -d '{"title":"'"$pr_title"'","base":"master","head":"'"$branch_name"'"}' | jq -r '.number')

    # Adds default reviewers
    curl -f -X POST \
        -H "Authorization: token $github_token" \
        -H "Accept: application/vnd.github+json" \
        https://cc-github.bmwgroup.net/api/v3/repos/$oss_repo/pulls/$pr_nr/requested_reviewers \
        -d '{"team_reviewers":["dev"]}'

    remote_url="git@cc-github.bmwgroup.net:apinext/ramses-logic-sdk.git"
    mirror_path="{{ ansible_user_dir }}/apinext_mirror"
    echo "Cloning $remote_url to $mirror_path"
    git clone $remote_url $mirror_path

    {{ ansible_user_dir }}/oss-create-release/bin/python {{ git_root }}/external/ramses/proprietary/scripts/ci-scripts/release-copy.py \
        -c {{ git_root }}/ci/release-copy/apinext-app.yaml \
        -s {{ git_root }} \
        -d $mirror_path

    cd $mirror_path

    echo "Creating commit with automatic release"
    git config --global user.email "tu-cc-ci-ramses@list.bmw.com"
    git config --global user.name "Ramses Technical User"
    git checkout -b $branch_name
    git add -A
    git commit -m "Auto-release for ramses logic $tagname"

    echo "Pushing branch $branch_name to $remote_url"
    git push origin $branch_name
  args:
    executable: /bin/bash
    chdir: "{{ git_root }}"

# Don't invoke this job without a tag - otherwise it will fail
- name: Publish Apinext release
  shell: |
    set -o pipefail
    set -e
    apinext_repo="apinext/ramses-logic-sdk"
    remote_url="git@cc-github.bmwgroup.net:$apinext_repo.git"
    githash=$(git rev-parse --short HEAD)
    tagname={{ zuul.tag }}

    {{ git_root }}/ci/scripts/check_versions.sh -t $tagname

    mirror_path="{{ ansible_user_dir }}/apinext_mirror"
    echo "Cloning $remote_url to $mirror_path"
    git clone $remote_url $mirror_path

    echo "Creating release from tag '$tagname' (githash $githash)"

    {{ ansible_user_dir }}/oss-create-release/bin/python {{ git_root }}/external/ramses/proprietary/scripts/ci-scripts/release-copy.py \
        -c {{ git_root }}/ci/release-copy/apinext-app.yaml \
        -s {{ git_root }} \
        -d $mirror_path

    cd $mirror_path

    branch_name="$tagname-$githash"
    git remote add cc $remote_url

    echo "Creating commit with automatic release"
    git config --global user.email "tu-cc-ci-ramses@list.bmw.com"
    git config --global user.name "Ramses Technical User"
    git checkout -b $branch_name
    git add -A
    git commit -m "Auto-release for ramses logic $tagname"
    echo "Pushing branch $branch_name to $remote_url"
    git push cc $branch_name

    pr_title="Auto-release RamsesLogic $tagname"
    pr_body="Issue: None"

    github_token=`cat {{ ansible_user_dir }}/.github-token`
    echo "Creating release PR $pr_title in repo $apinext_repo with body '$pr_body'"
    curl -f -X POST \
        -H "Authorization: token $github_token" \
        -H "Accept: application/vnd.github+json" \
        https://cc-github.bmwgroup.net/api/v3/repos/$apinext_repo/pulls \
        -d '{"title":"'"$pr_title"'","body":"'"$pr_body"'","base":"master","head":"'"$branch_name"'"}'

    echo "PR created successfully!"
  args:
    executable: /bin/bash
    chdir: "{{ git_root }}"

...
