#  -------------------------------------------------------------------------
#  Copyright (C) 2018 BMW Car IT GmbH
#  -------------------------------------------------------------------------
#  This Source Code Form is subject to the terms of the Mozilla Public
#  License, v. 2.0. If a copy of the MPL was not distributed with this
#  file, You can obtain one at https://mozilla.org/MPL/2.0/.
#  -------------------------------------------------------------------------

---
Checks:
    '-*,
    bugprone-*,
    -bugprone-argument-comment,
    -bugprone-branch-clone,
    -bugprone-no-escape,
    -bugprone-narrowing-conversions,
    -bugprone-redundant-branch-condition,
    -bugprone-signal-handler,

    cert-dcl16-c,
    cert-dcl21-cpp,
    cert-dcl50-cpp,
    cert-dcl58-cpp,
    cert-dcl59-cpp,
    cert-env33-c,
    cert-err34-c,
    cert-err52-cpp,
    cert-err60-cpp,
    cert-mem57-cpp,
    cert-msc50-cpp,
    cert-msc51-cpp,
    cert-oop58-cpp,

    clang-analyzer-apiModeling.StdCLibraryFunctions,
    clang-analyzer-core*,
    clang-analyzer-cplusplus.*,
    clang-analyzer-deadcode.DeadStores,
    clang-analyzer-optin.cplusplus.UninitializedObject,
    clang-analyzer-optin.cplusplus.VirtualCall,
    clang-analyzer-optin.performance.Padding,
    clang-analyzer-optin.portability.UnixAPI,
    clang-analyzer-security.*,
    -clang-analyzer-security.insecureAPI.decodeValueOfObjCType,
    clang-analyzer-unix.*,
    clang-analyzer-valist.*,

    cppcoreguidelines-avoid-goto,
    cppcoreguidelines-c-copy-assignment-signature,
    cppcoreguidelines-init-variables,
    cppcoreguidelines-interfaces-global-init,
    cppcoreguidelines-narrowing-conversions,
    cppcoreguidelines-no-malloc,
    cppcoreguidelines-pro-type-cstyle-cast,
    cppcoreguidelines-pro-type-reinterpret-cast,
    cppcoreguidelines-pro-type-vararg,
    cppcoreguidelines-slicing,

    google-build-explicit-make-pair,
    google-default-arguments,
    google-explicit-constructor,
    google-global-names-in-headers,
    google-readability-casting,
    google-runtime-int,
    google-runtime-operator,
    google-upgrade-googletest-case,

    hicpp-exception-baseclass,
    hicpp-multiway-paths-covered,
    hicpp-no-assembler,
    hicpp-signed-bitwise,

    misc-*,
    -misc-no-recursion,
    -misc-non-private-member-variables-in-classes,

    modernize-*,
    -modernize-concat-nested-namespaces,
    -modernize-replace-disallow-copy-and-assign-macro,
    -modernize-use-trailing-return-type,
    -modernize-use-transparent-functors,

    performance-*,
    -performance-no-int-to-ptr,

    readability-*,
    -readability-avoid-const-params-in-decls,
    -readability-function-cognitive-complexity,
    -readability-function-size,
    -readability-identifier-naming,
    -readability-magic-numbers,
    -readability-make-member-function-const,
    -readability-qualified-auto,
    -readability-redundant-access-specifiers,
    -readability-simplify-boolean-expr,
    -readability-uppercase-literal-suffix,
    -readability-use-anyofallof,
'

# everything that is enabled is also an error
WarningsAsErrors: '*'

# no headers filtered here, done later in wrapper script
HeaderFilterRegex: '.*'

AnalyzeTemporaryDtors: false
FormatStyle:     File

CheckOptions:
  - key: bugprone-assert-side-effect.AssertMacros
    value: 'Q_ASSERT,Q_ASSERT_X,Q_CHECK_PTR'
  - key: bugprone-assert-side-effect.CheckFunctionCalls
    value: '1'
  - key: bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression
    value: '1'
  - key: bugprone-suspicious-string-compare.WarnOnLogicalNotComparison
    value: '1'

  - key: cppcoreguidelines-narrowing-conversions.PedanticMode
    value: '1'
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions
    value: '1'
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: '1'

  - key: hicpp-signed-bitwise.IgnorePositiveIntegerLiterals
    value: true
  - key: hicpp-multiway-paths-covered.WarnOnMissingElse
    value: '0'

  - key: misc-throw-by-value-catch-by-reference.WarnOnLargeObject
    value: '1'
    
  - key: modernize-use-override.AllowOverrideAndFinal
    value: true

  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: false

  - key: readability-braces-around-statements.ShortStatementLines
    value: '2'
  - key: readability-implicit-bool-conversion.AllowPointerConditions
    value: true


...
