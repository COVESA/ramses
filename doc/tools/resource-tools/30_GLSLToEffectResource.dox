//  -------------------------------------------------------------------------
//  Copyright (C) 2016 BMW Car IT GmbH
//  -------------------------------------------------------------------------
//  This Source Code Form is subject to the terms of the Mozilla Public
//  License, v. 2.0. If a copy of the MPL was not distributed with this
//  file, You can obtain one at https://mozilla.org/MPL/2.0/.
//  -------------------------------------------------------------------------

/**
@page GLSLToEffectResource Storing effects in resource files

# Summary

As described in @ref EffectLifecycle the overhead of effect creation in
ramses::RamsesClient::createEffect() can be significantly reduced by creating
the effects offline and storing them in resource files.

RAMSES provides a set of tools which enable the bundling of effects in resource
files. The effects can be loaded during runtime from these files by using one of
the resource loading methods in the client API (e.g. ramses::RamsesClient::loadResources).
The resources can be resolved using their client-side id (see @ref EffectLifecycle to avoid
mixing up the effect id's) by calling ramses::RamsesClient::findResourceById after the loading
is finished. RAMSES allows partitioning the effects in multiple files and/or creating some
effects online and loading some from files.

# Usage

Each effect has to be converted individually by calling <b>ramses-effect-from-glsl-shader</b>:

With full-named arguments:
\code
ramses-effect-from-glsl-shader --in-vertex-shader <filename> --in-fragment-shader <filename> --in-config <filename> --out-resource-file <filename> --out-effect-id <filename> --out-effect-id-type <client|renderer> --out-effect-name <optional string>
\endcode

With short-named arguments:
\code
ramses-effect-from-glsl-shader -iv <filename> -if <filename> -ic <filename> -or <filename>  -oe <filename> -ot <client|renderer> -on <optional string>
\endcode

## Parameter description:
<b>--in-vertex-shader/-iv:</b>input, the custom vertex shader.<br>
<b>--in-fragment-shader/-if:</b>input, the custom fragment shader.<br>
<b>--in-config/-ic:</b>input, the effect config file, which contains the definition of Uniform Semantics, Attribute Semantics and Compiler Defines.<br>
<b>--out-resource-file/-or:</b>output, the effect resource created by the tool.<br>
<b>--out-effect-id/-oe:</b> path to file where the ramses effect ID will be stored <br>
<b>--out-effect-id-type/-ot:</b> which type of effectId (client or renderer) to use when writing the effectId; see @ref EffectLifecycle for more info <br>
<b>--out-effect-name/-on:</b>optional output, the name for the generated effect. If no name is provided, "in-vertex-shader-file-name_in-fragment-shader-file-name" will be used
as the name for the generated effect.

## Effect config file description:
For a detailed description of the effect config file, please refer to:
@ref GLSLToBinaryShader

# Combining multiple effects into one file

The file produced by the 'ramses-effect-from-glsl-shader' executable is a common ramses resource file.
As such, it can be combined with the ramses resource packer tool (see @ref ResourcePacker).

*/
